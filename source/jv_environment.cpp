#include "jv_environment.h"

namespace jv{
// Make all block prefabs here
void BlockFactory(game_map& map, const bn::point top_left, const uchar_t option, const bool blockFlip){
    bn::array<uchar_t, 16> block_array;

    switch(option){
        // Floor Tiles
        case 1:{
            block_array = { 1, 2, 1, 21, 
                            22, 23, 22, 34, 
                            1, 2, 1, 21, 
                            22, 23, 22, 34};
            break;
        }
        case 2:{
            block_array = { 5, 6, 7, 8, 
                            24, 25, 24, 24, 
                            21, 21, 20, 21, 
                            34, 33, 34, 34};
            break;
        }
        case 3:{
            block_array = { 5, 6, 7, 8, 
                            40, 25, 24, 24, 
                            19, 21, 20, 21, 
                            34, 33, 34, 34};
            break;
        }
        case 4:{
            block_array = { 5, 6, 7, 8, 
                            40, 25, 24, 40, 
                            19, 21, 20, 19, 
                            34, 33, 34, 34};
            block_array[11] += 127;
            break;
        }
        case 5:{
            block_array = { 1, 2, 18, 21, 
                            31, 32, 34, 34, 
                            21, 20, 21, 21, 
                            33, 34, 34, 34};
            break;
        }
        case 6:{
            block_array = { 8, 1, 2, 18, 
                            22, 31, 32, 34, 
                            19, 21, 20, 21, 
                            34, 33, 34, 34};
            break;
        }
        case 7:{
            block_array = { 1, 2, 128, 128, 
                            22, 23, 22, 22, 
                            1, 2, 1, 128, 
                            22, 23, 22, 22};
            break;
        }
        case 8:{
            block_array = { 5, 6, 7, 8, 
                            24, 25, 24, 24, 
                            14, 15, 11, 12, 
                            35, 36, 26, 27}; 
            break;
        }
        case 9:{
            block_array = { 1, 1, 2, 21, 
                            22, 23, 22, 34, 
                            1, 1, 18, 21, 
                            31, 32, 34, 34};
            break;
        }
        case 10:{
            block_array = { 21, 21, 20, 21, 
                            34, 33, 34, 34, 
                            14, 15, 11, 12, 
                            35, 36, 26, 27};
            break;
        }
        case 11:{
            block_array = { 21, 21, 20, 21, 
                            37, 33, 34, 34, 
                            9, 15, 11, 12, 
                            35, 36, 26, 27};
            break;
        }
        case 12:{
            block_array = { 21, 21, 20, 21, 
                            37, 33, 34, 34, 
                            9, 10, 3, 4, 
                            35, 36, 26, 27};
            block_array[7] += 127;
            break;
        }
        case 13:{
            block_array = { 21, 21, 21, 21, 
                            34, 34, 34, 34, 
                            16, 17, 21, 21, 
                            28, 29, 30, 34};
            break;
        }
        case 14:{
            block_array = { 21, 21, 20, 21, 
                            37, 33, 34, 34, 
                            1, 16, 17, 21, 
                            38, 39, 22, 30};
            break;
        }
        case 15:{
            block_array = { 1, 16, 17, 21, 
                            28, 29, 22, 30, 
                            44, 45, 3, 4, 
                            89, 89, 42, 43};
            break;
        }
        case 16:{
            block_array = { 44, 45, 3, 4, 
                            89, 89, 42, 43, 
                            93, 94, 89, 89, 
                            0, 0, 93, 94};
            break;
        }
        case 17:{
            block_array = { 1, 1, 1, 21, 
                            28, 29, 22, 41, 
                            44, 45, 3, 4, 
                            89, 89, 42, 43};
            break;
        }
        case 18:{
            block_array = { 19, 21, 20, 21, 
                            34, 33, 34, 34, 
                            21, 21, 20, 21, 
                            34, 33, 34, 34};
            break;
        }
        case 19:{
            block_array = { 21, 21, 20, 21, 
                            34, 33, 34, 34, 
                            21, 21, 20, 21, 
                            37, 33, 34, 34};
            break;
        }
        case 20:{
            block_array = { 21, 21, 20, 21, 
                            34, 33, 34, 34, 
                            21, 21, 20, 21, 
                            34, 33, 34, 34};
            break;
        }
        case 21:{
            block_array = { 1, 1, 2, 18, 
                            22, 23, 22, 34, 
                            1, 1, 2, 21, 
                            22, 23, 22, 34};
            break;
        }
        // Wall Tiles
        case 22:{
            block_array = { 50, 51, 51, 50,
                            48, 49, 49, 48,
                            50, 51, 51, 50,
                            52, 53, 53, 52};
            block_array[2] += 127;
            block_array[3] += 127;
            block_array[6] += 127;
            block_array[7] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        case 23:{
            block_array = { 46, 47, 47, 46,
                            48, 49, 49, 48,
                            50, 51, 51, 50,
                            48, 49, 49, 48};
            block_array[2] += 127;
            block_array[3] += 127;
            block_array[6] += 127;
            block_array[7] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        case 24:{
            block_array = { 69, 70, 63, 64, 
                            65, 66, 71, 72, 
                            73, 74, 75, 76, 
                            77, 78, 97, 98};
            break;
        }
        case 25:{
            block_array = {  0,  0, 54, 80,
                            57, 58, 59, 60,
                            61, 62, 63, 64,
                            65, 66, 67, 68};
            break;
        }
        case 26:{
            block_array = {   0,  0, 54, 56,
                            57, 58, 59, 60,
                            61, 62, 63, 64,
                            65, 66, 67, 68};
            break;
        }
        case 27:{
            block_array = { 50, 51, 51, 50,
                            48, 49, 49, 48,
                            50, 51, 51, 50,
                            48, 49, 49, 48};
            block_array[2] += 127;
            block_array[3] += 127;
            block_array[6] += 127;
            block_array[7] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        case 28:{
            block_array = { 0,  0,  0,  0,
                            0,  0,  0,  0,
                           46, 47, 47, 46,
                           48, 49, 49, 48};
            block_array[2] += 127;
            block_array[3] += 127;
            block_array[6] += 127;
            block_array[7] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        case 29:{
            block_array = { 61, 62, 63, 64,
                            65, 66, 67, 68,
                            69, 70, 63, 64,
                            65, 66, 71, 72};
            break;
        }
        case 30:{
            block_array = {  0,  0,  0,  0,
                             0,  0,  0,  0,
                             0,  0, 54, 80,
                            57, 58, 59, 60,};
            break;
        }
        case 31:{
            block_array = {  0,  0,  0,  0,
                             0,  0,  0,  0,
                             0,  0, 54, 56,
                            57, 58, 59, 60};
            break;
        }
        case 32:{
            block_array = { 73, 74, 75, 76, 
                            77, 78, 97, 98, 
                            99, 100, 2, 18, 
                            22, 31, 32, 34};
            break;
        }
        case 33:{
            block_array = { 73, 74, 75, 76, 
                            77, 78, 97, 98, 
                            99, 100, 1, 18, 
                            22, 23, 25, 34};
            break;
        }
        case 34:{
            block_array = { 0,  0, 79, 80,
                            0,  0, 81, 82,
                            0,  0, 83, 84,
                            0,  0, 81, 82};
            break;
        }
        case 35:{
            block_array = { 0,  0, 81, 82,
                            0,  0, 83, 84,
                            0,  0, 81, 82,
                            0,  0, 83, 84};
            break;
        }
        case 36:{
            block_array = { 0,  0,  0,  0,
                            0,  0,  0,  0,
                            0,  0, 79, 80,
                            0,  0, 83, 84 };
            break;
        }
        case 37:{
            block_array = { 0,  0, 81, 82,
                            0,  0, 85, 86,
                            0,  0,  0,  0,
                            0,  0,  0,  0 };
            break;
        }
        case 38:{
            block_array = { 82, 81,  0,  0,
                            84, 83,  0,  0,
                            46, 47, 47, 46,
                            48, 49, 49, 48 };
            block_array[0] += 127;
            block_array[1] += 127;
            block_array[4] += 127;
            block_array[5] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        case 39:{
            block_array = {82, 81, 81, 82,
                           84, 83, 83, 84,
                           46, 47, 47, 46,
                           48, 49, 49, 48};
            block_array[0] += 127;
            block_array[1] += 127;
            block_array[4] += 127;
            block_array[5] += 127;
            block_array[10] += 127;
            block_array[11] += 127;
            block_array[14] += 127;
            block_array[15] += 127;
            break;
        }
        // 
        case 40:{
            block_array = { 90, 90, 90, 90,
                            90, 90, 90, 90,
                             0,  0,  0,  0,
                             0,  0,  0,  0};
            break;
        }
        case 41:{
            block_array = { 93, 94, 90, 90,
                             0,  0, 93, 94,
                             0,  0,  0,  0,
                             0,  0,  0,  0};
            break;
        }
        case 42:{
            block_array = { 90, 90, 91, 82,
                            90, 90, 92, 84,
                             0,  0, 81, 82,
                             0,  0, 83, 84};
            break;
        }
        case 43:{
            block_array = { 82, 81, 81, 82,
                            84, 83, 83, 84,
                            82, 81, 81, 82,
                            84, 83, 83, 84};
            block_array[0] += 127;
            block_array[1] += 127;
            block_array[4] += 127;
            block_array[5] += 127;
            block_array[8] += 127;
            block_array[9] += 127;
            block_array[12] += 127;
            block_array[13] += 127;
            break;
        }
        // ********************************
        default:{
            block_array = { 0,  0,  0,  0,
                            0,  0,  0,  0,
                            0,  0,  0,  0,
                            0,  0,  0,  0};
            break;
        }
    }

    game_map block(4, 4, block_array.data());
    map.insert_map(block, top_left, blockFlip);
}

// This function is meant to be replaced with procedural generation
void LevelFactory(game_map& map, const int option){
    int width, height;
    map.reset();
    
    switch(option){
        case 1:{
            width = 20;
            height = 20;
            uchar_t blockArr[400] = {
                 0, 0,31,28,31, 0, 0, 0, 0,31,28,28,28,28,28,31, 0, 0, 0, 0,
                36,25,29,22,29,25,28,28,25,29,22,22,22,22,22,29,34, 0, 0, 0,
                35,24,32, 4,32,24,22,22,24,32, 3, 2, 2, 2, 3,33,38,28,31, 0,
                35,21,18,20,18, 6, 2, 2, 6,18,20,20,20,20,20, 1,22,22,29,34,
                35, 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 8, 8,33,35,
                35, 1,20,20,20,20,20,13,10,20,10,13,20,20,20, 1,42,42, 7,35,
                37,17,11,10,20,10,11,17,38, 7,42,17,11,20,11,17,37,35, 7,35,
                 0,41,40,42, 7,22,22,22,22, 7,35,41,42, 7,42,41, 0,35, 7,35,
                 0, 0, 0,35,20, 8, 8, 8, 8,20,38,28,38, 7,35, 0, 0,35, 7,35,
                 0, 0, 0,35, 7,42,40,40,42, 7,22,22,22, 7,35, 0, 0,35, 7,35,
                 0, 0, 0,35, 7,35, 0,31,38,20, 8, 8, 8,20,35, 0, 0,35, 7,35,
                 0, 0, 0,35, 7,35,34,29,22, 7,22,29,42, 7,35, 0, 0,35, 7,35,
                 0,31,28,38, 7,38,38,33, 3,20, 3,33,39, 7,38,28,31,35, 7,35,
                34,29,22,22, 7,22,22, 1,20,20,20, 1,22, 7,22,22,29,35, 7,35,
                35,33, 3, 2,20, 2, 2, 5,20,20,20, 5, 2,20, 2, 3,33,39, 7,35,
                35, 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 1,22, 7,35,
                35, 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 8,17,37,
                35, 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 1,42,41, 0,
                37,17,11,10,10,10,10,10,10,10,10,10,10,10,10,11,17,37, 0, 0,
                 0,41,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41, 0, 0, 0 };

            bool flipArr[400] = {
                 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
                 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,
                 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,
                 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,
                 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
                 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
                 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1,
                 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,
                 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };

            for(int y = 0; y < height; y++){
                for(int x = 0; x < width; x++){
                    int index = x + y*width;
                    BlockFactory(map, bn::point(x*4, y*4), blockArr[index], flipArr[index]);
                }
            }
            break;
            }
        case 2:{
            width = 10;
            height = 11;
            uchar_t blockArr[110] = {
                 0,31,28,28,28,28,28,28,31, 0,
                34,29,22,22,22,22,22,22,29,34,
                35,33, 3, 2, 2, 2, 2, 3,33,35,
                35, 1,20,20,20,20,20,20, 1,35,
                35, 1,20,20,20,20,20,20, 1,35,
                35, 1,20,20,20,20,20,20, 1,35,
                35, 1,20,20,20,20,20,20, 1,35,
                35, 1,20,20,20,20,20,20, 1,35,
                35, 1,20,20,20,20,20,20, 1,35,
                37,17,11,10,10,10,10,11,17,37,
                 0,41,40,40,40,40,40,40,41, 0 };
                 
            bool flipArr[110] = {
                0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 1, 0, 1, 0, 1, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                0, 0, 0, 0, 1, 0, 1, 1, 1, 1,
                0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };

            for(int y = 0; y < height; y++){
                for(int x = 0; x < width; x++){
                    int index = x + y*width;
                    BlockFactory(map, bn::point(x*4, y*4), blockArr[index], flipArr[index]);
                }
            }
            break;
            }
        default:{
            width = 12;
            height = 10;
            uchar_t blockArr[120] = {
                 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5,
                 6, 6, 7, 7, 8, 8, 9, 9,10,10,11,11,
                12,12,13,13,14,14,15,15,16,16,17,17,
                18,18,19,19,20,20,21,21,22,22,23,23,
                24,24,25,25,26,26,27,27,28,28,29,29,
                30,30,31,31,32,32,33,33,34,34,35,35,
                36,36,37,37,38,38,39,39,40,40,41,41,
                42,42,43,43,44,44,45,45,46,46,47,47,
                48,48,49,49,50,51,52,53,54,55,56,57,
                58,59,60,61,62,63,64,65,66,67,68,69};
                
            bool flipArr[120] = {
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };

            for(int y = 0; y < height; y++){
                for(int x = 0; x < width; x++){
                    int index = x + y*width;
                    BlockFactory(map, bn::point(x*4, y*4), blockArr[index], flipArr[index]);
                }
            }
        }
        break;
    }
}

}